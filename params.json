{"name":"Observer","tagline":"","body":"## Observer.js - a lightweight pub/sub.\r\nObserver is a lightweight pub/sub library that can be used as a single event bus or as a base class for easy communications between objects.\r\n\r\n[https://github.com/jimenglish81/observer](https://github.com/jimenglish81/observer)\r\n\r\nTo install run **npm install** then **grunt**.\r\n\r\n## Background\r\nI authored Observer in order to have a lightweight pub/sub library to use while developing decoupled apps. This functionality is available through multiple libraries and frameworks, but I wanted to be able to have a library agnostic one. \r\n\r\n## Usage\r\nTo use Observer either create a new instance\r\n\r\n```javascript\r\nvar observerInstance = new Observer();\r\n```\r\n\r\nor use Observer's mixin functionality to decorate an object\r\n\r\n```javascript\r\nvar myObject = {};\r\nvar observerMixin = Observer.mixin(myObject);\r\n```\r\n\r\n### Subscribing to an event\r\nSubscribe via the **subscribe** method which takes two mandatory arguments and two optional ones.\r\n* **eventName** - _required_ name of the event you wish to subscribe to.\r\n* **handler** - _required_ handler you wish to run when the event is published. \r\n* **scope** - _optional_ the scope you wish the supplied handler to run in. \r\n* **once** - _optional_ if you wish the handler to only be triggered once and then immediately unsubscribed. \r\n\r\n## Maintenance\r\nAny issues please contact Jim English (@jimenglish81) or submit a pull request.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}