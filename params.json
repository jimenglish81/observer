{"name":"Observer","tagline":"","body":"### Observer.js - a lightweight pub/sub.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:\r\n\r\n```javascript\r\nfunction log(eventName) {\r\n    return function() {\r\n        console.log(eventName, 'fired ', ' arguments', arguments, ' scope', this);\r\n    };\r\n}\r\n\r\nvar o = new Observer();\r\no.subscribe('ee', log('ee'), window);\r\no.subscribe('ee', log('ee'), 'ggg');\r\no.subscribe('ee:ff', log('ee:ff'), window);\r\no.subscribe('ee:ff', log('ee:ff'), window);\r\no.subscribe('ee:ff:gg', log('ee:ff:gg'), window);\r\no.subscribe('ee:ff:gg', log('ee:ff:gg'), window);\r\no.subscribe('ee:ff:gg', log('ee:ff:gg'), 'ggg');\r\no.subscribe('ee:ff:gg', log('ee:ff:gg'), 'ggg');\r\n\r\no.publish('ee', 'myArg');\r\no.publish('ee:ff', 'myArg', 'myArg2');\r\no.publish('ee:ff:gg', 'myArg3');\r\n```\r\n\r\n### Background\r\nI authored observer in order to have a lightweight pub/sub library to use while developing decoupled apps. This functionality is available through multiple libraries and frameworks, but I wanted to be able to have a library agnostic one. \r\n\r\n### Maintenance\r\nAny issues please contact Jim English (@jimenglish81) or submit a pull request.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}